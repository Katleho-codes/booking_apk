import { useNavigation, useRoute } from '@react-navigation/native';
import { NativeStackNavigationProp } from "@react-navigation/native-stack";
import axios from 'axios';
import Checkbox from 'expo-checkbox';
import * as FileSystem from "expo-file-system";
import * as WebBrowser from 'expo-web-browser';
import moment from 'moment';
import React, { useEffect, useRef, useState } from 'react';
import { Alert, Image, Modal, ScrollView, StatusBar, Text, TextInput, useWindowDimensions, View } from 'react-native';
import { Dropdown } from 'react-native-element-dropdown';
import SignatureScreen, {
    SignatureViewRef,
} from "react-native-signature-canvas";
import CustomButton from '../../components/Button';
import Container from '../../components/Container';
import SectionHeaderTitle from '../../components/SectionHeaderTitle';
import { assetTypes } from '../../utils/assetTypes';
import { Colors } from '../../utils/colors';
import { faultOccurences } from '../../utils/faultOccurences';
import { HHPSymptom1, HHPSymptom2A, HHPSymptom2B, HHPSymptom2C, HHPSymptom2D, HHPSymptom2E, HHPSymptom2F, HHPSymptom2G, HHPSymptom2H, HHPSymptom2I, HHPSymptom2J, HHPSymptom2K, HHPSymptom2L, HHPSymptom2M, HHPSymptom2N, HHPSymptom2O, HHPSymptom2P, HHPSymptom2Q, HHPSymptom3A, HHPSymptom3AA, HHPSymptom3AB, HHPSymptom3AC, HHPSymptom3AD, HHPSymptom3AE, HHPSymptom3AF, HHPSymptom3AG, HHPSymptom3AH, HHPSymptom3AI, HHPSymptom3AJ, HHPSymptom3AK, HHPSymptom3AL, HHPSymptom3AM, HHPSymptom3AN, HHPSymptom3AO, HHPSymptom3AP, HHPSymptom3AQ, HHPSymptom3AR, HHPSymptom3AS, HHPSymptom3AT, HHPSymptom3AU, HHPSymptom3AV, HHPSymptom3AW, HHPSymptom3AX, HHPSymptom3AY, HHPSymptom3AZ, HHPSymptom3B, HHPSymptom3BA, HHPSymptom3BB, HHPSymptom3BC, HHPSymptom3BD, HHPSymptom3BF, HHPSymptom3BG, HHPSymptom3BH, HHPSymptom3BI, HHPSymptom3BJ, HHPSymptom3BK, HHPSymptom3BL, HHPSymptom3BM, HHPSymptom3BN, HHPSymptom3BO, HHPSymptom3BP, HHPSymptom3BQ, HHPSymptom3C, HHPSymptom3CA, HHPSymptom3CB, HHPSymptom3CC, HHPSymptom3CD, HHPSymptom3CE, HHPSymptom3CF, HHPSymptom3CG, HHPSymptom3CH, HHPSymptom3CI, HHPSymptom3CJ, HHPSymptom3CK, HHPSymptom3CL, HHPSymptom3CM, HHPSymptom3CN, HHPSymptom3CO, HHPSymptom3CP, HHPSymptom3CQ, HHPSymptom3CR, HHPSymptom3CS, HHPSymptom3CT, HHPSymptom3CU, HHPSymptom3CV, HHPSymptom3CW, HHPSymptom3CX, HHPSymptom3CY, HHPSymptom3D, HHPSymptom3DA, HHPSymptom3DB, HHPSymptom3DC, HHPSymptom3DD, HHPSymptom3DE, HHPSymptom3DF, HHPSymptom3DH, HHPSymptom3DI, HHPSymptom3DJ, HHPSymptom3DK, HHPSymptom3DL, HHPSymptom3DM, HHPSymptom3DN, HHPSymptom3DO, HHPSymptom3DP, HHPSymptom3DQ, HHPSymptom3DR, HHPSymptom3DS, HHPSymptom3DT, HHPSymptom3DU, HHPSymptom3DV, HHPSymptom3DW, HHPSymptom3DX, HHPSymptom3DY, HHPSymptom3DZ, HHPSymptom3E, HHPSymptom3EA, HHPSymptom3EB, HHPSymptom3EC, HHPSymptom3ED, HHPSymptom3EE, HHPSymptom3EF, HHPSymptom3EG, HHPSymptom3EH, HHPSymptom3EI, HHPSymptom3EJ, HHPSymptom3EK, HHPSymptom3EL, HHPSymptom3EM, HHPSymptom3EN, HHPSymptom3EO, HHPSymptom3EP, HHPSymptom3EQ, HHPSymptom3ER, HHPSymptom3ES, HHPSymptom3ET, HHPSymptom3EU, HHPSymptom3EV, HHPSymptom3EW, HHPSymptom3EX, HHPSymptom3EY, HHPSymptom3EZ, HHPSymptom3F, HHPSymptom3FA, HHPSymptom3FB, HHPSymptom3FC, HHPSymptom3FD, HHPSymptom3FE, HHPSymptom3FF, HHPSymptom3FG, HHPSymptom3FH, HHPSymptom3FI, HHPSymptom3FJ, HHPSymptom3FK, HHPSymptom3FL, HHPSymptom3FM, HHPSymptom3FN, HHPSymptom3FO, HHPSymptom3FP, HHPSymptom3FR, HHPSymptom3FS, HHPSymptom3FT, HHPSymptom3FU, HHPSymptom3FV, HHPSymptom3FW, HHPSymptom3FX, HHPSymptom3FY, HHPSymptom3FZ, HHPSymptom3G, HHPSymptom3GA, HHPSymptom3GB, HHPSymptom3GC, HHPSymptom3GD, HHPSymptom3GE, HHPSymptom3GF, HHPSymptom3GG, HHPSymptom3GH, HHPSymptom3H, HHPSymptom3I, HHPSymptom3J, HHPSymptom3K, HHPSymptom3L, HHPSymptom3M, HHPSymptom3N, HHPSymptom3O, HHPSymptom3P, HHPSymptom3Q, HHPSymptom3R, HHPSymptom3S, HHPSymptom3T, HHPSymptom3U, HHPSymptom3V, HHPSymptom3W, HHPSymptom3X, HHPSymptom3Y, HHPSymptom3Z, HHPSymptom3Z_ } from '../../utils/gspnDropdowns';
import { datetimestamp } from '../../utils/timezone';
import { styles } from './style';



export default function DeviceInspection() {
    const [isAssetDropdownFocus, setIsAssetDropdownFocus] = useState(false)
    const [assetType, setAssetType] = useState("");
    const [isBackUpNeedCheckboxEnabled, setIsBackUpNeedCheckboxEnabled] = useState(false)
    // Navigation hook
    const navigation = useNavigation<NativeStackNavigationProp<any>>();

    const [fault, setFault] = useState("")
    const [faultOccurence, setFaultOccurence] = useState("")
    const [faultOccurenceFocus, setFaultOccurenceFocus] = useState(false)
    const route = useRoute();
    const [customerId, setCustomerId] = useState<any>("")
    const { firstname, lastname, email, phoneNumber, customUUID, provinceCode, address1, city, zip }: any = route?.params;
    // console.log(firstname, lastname, email, phoneNumber, customUUID, provinceCode, address1, city, zip)

    // Customer symptoms
    // Customer symptoms
    const [symptom1, setSymptom1] = useState("");
    const [symptoms1Clicked, setSymptom1Clicked] = useState(false)
    const [symptoms1ClickedLabel, setSymptom1ClickedLabel] = useState("")
    const [symptom2, setSymptom2] = useState('');
    const [symptoms2Clicked, setSymptom2Clicked] = useState(false)
    const [symptoms2ClickedLabel, setSymptom2ClickedLabel] = useState("")

    const [symptom3, setSymptom3] = useState("");
    const [symptoms3Clicked, setSymptom3Clicked] = useState(false)
    const [IMEI, setIMEI] = useState("")


    // Terms and conditions sigpad
    const [userTermsSignature, setUserTermsSignature] = useState("");
    const [signatureTermsExists, setSignatureTermsExists] = useState(false)
    const [readTerms, setReadTerms] = useState(false);

    const [modalVisible, setModalVisible] = useState(false);

    const { height, width, scale, fontScale } = useWindowDimensions();

    const toggleTermsAndModal = () => {
        setReadTerms(prev => !prev);
        setModalVisible(true);
    }

    // For terms and conditions
    const termsRef = useRef<SignatureViewRef>(null);

    const handleOK = (signature: any) => {
        const path = FileSystem.cacheDirectory + "sign.png";
        FileSystem.writeAsStringAsync(
            path,
            signature.replace("data:image/png;base64,", ""),
            { encoding: FileSystem.EncodingType.Base64 }
        )
            .then(() => FileSystem.getInfoAsync(path))
            .then(() => {
                // 
            })
            .catch(() => {
                // 
            });
    };

    const handleTermsSignatureOK = (signature: any) => {
        // console.log("signature", signature);
        handleOK(signature); // Callback from Component props
        setUserTermsSignature(signature)
        setSignatureTermsExists(true)
    }

    // Called after ref.current.readSignature() reads an empty string
    const handleTermsSignatureEmpty = () => {
        // console.log("Empty");
    };

    // Called after ref.current.clearSignature()
    const handleTermsSignatureClear = () => {
        // console.log("clear success!");
    };

    // Called after end of stroke
    const handleTermsSignatureEnd = () => {
        termsRef?.current?.readSignature();
    };

    // Called after ref.current.getData()
    const handleData = (data: any) => {
        // console.log(data);
    };



    const updateEntry = ({ ticketNumber }: string | number | any) => {
        const updatedAt = datetimestamp;
        const values = {
            fault,
            faultOccurence,
            assetType,
            ticketNumber,
            updatedAt,
            customUUID,
        }
        // console.log(values)
        const response = fetch(`${process.env.EXPO_PUBLIC_BACKEND_LINK}/${customUUID}`, {
            method: "PUT",
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(values)
        }).then((res) => res.json(

        )).catch((error) => {
            console.log("error update", error)
        })


    }

    const getCustomerId = async () => {
        try {
            const { data } = await axios.get(`${process.env.EXPO_PUBLIC_REPAIRSHOPR_API_SUBDOMAIN}/customers?query=${email}`, {
                headers: {
                    'Content-Type': 'application/json',
                    Authorization: `Bearer ${process.env.EXPO_PUBLIC_REPAIRSHOPR_BEARER_TOKEN}`
                },
            })
            if (data?.customers[0]?.email === email) {
                setCustomerId(data?.customers[0]?.id)

            }
        } catch (error) {
            // 
        }
    }
    useEffect(() => {
        getCustomerId()
    }, [email]);

    const createServiceOrder = async () => {
        const generateTimeStampForPacCode = moment(new Date(
            Date.now() + 1000 * 60 * -new Date().getTimezoneOffset()
        )
            .toISOString()
            .replace("T", " ")
            .replace("Z", "")).format("YYMMDDhhmmss");
        const todaysDate = moment(new Date(
            Date.now() + 1000 * 60 * -new Date().getTimezoneOffset()
        )
            .toISOString()
            .replace("T", " ")
            .replace("Z", "")).format("YYYYMMDD");

        const values = {
            "IsCommonHeader": {
                "Company": "C720",
                "AscCode": "1730640",
                "Lang": "EN",
                "Country": "ZA",
                "Pac": `9999999${generateTimeStampForPacCode}`
            },
            "IvCreationCheck": `${todaysDate}`,
            "IsHeaderInfo": {
                "AscJobNo": ""
            },
            "IsBpInfo": {
                "CustomerCode": "",
                "Addrnumber": ""
            },
            "IsModelInfo": {
                "IMEI": `${IMEI}`,
                "PurchaseDate": "",
                "Accessory": "",
                "DefectDesc": `${fault}`,
                "Remark": "",
                "WtyException": ""
            },
            "IsJobInfo": {
                "SymCode1": `${symptom1}`,
                "SymCode2": `${symptom2}`,
                "SymCode3": `${symptom3}`,
                "SvcType": "CI",
                "QueueTokenNo": "",
                "WtyType": ""
            },
            "IsDateInfo": {
                "RequestDate": "",
                "UntRecvDate": "",
                "UntRecvTime": ""
            },
            "IsWtyInfo": {
                "WtyConsType": ""
            },
            "IsBpDetail": {
                "CustFirstName": "Kimberly",
                "CustLastName": " Cuffie",
                "CustHomePhone": "",
                "CustOfficePhone": "",
                "CustMobilePhone": "",
                "CustEmail": "",
                "CustAddrStreet2": "",
                "CustAddrStreet1": "1895 Kamp St",
                "CustCity": "Cape Town",
                "CustState": "WC",
                "CustZipcode": "7489",
                "Country": "RSA"
            }
        }
        // console.log("values", values)
        const response = fetch(`${process.env.EXPO_PUBLIC_IPAAS_LINK}/CreateSO/1.0/ImportSet`, {
            method: "POST",
            headers: {
                'Content-Type': 'application/json',
                Authorization: `Bearer ${process.env.EXPO_PUBLIC_IPAAS_TOKEN}`
            },
            body: JSON.stringify(values)
        }).then((res) => res.json(

        )).then((data) => {
            if (data) {
                console.log("so data", data)
            }
        }).catch((error) => {
            console.log("so error", error)
        })
    }

    const createTicket = async () => {
        const values = {
            "customer_id": customerId,
            "problem_type": assetType,
            "subject": fault,
            "status": "New",
            "ticket_type_id": "21878",
            "properties": {
                "Service Order No.": "",
                "Item Condition": "",
                "Backup Requires": "69752",
                "Warranty": "69477",
                "IMEI": ""
            }
        }
        try {
            const response = await axios.post(`${process.env.EXPO_PUBLIC_REPAIRSHOPR_API_SUBDOMAIN}/tickets`, values, {
                headers: {
                    'Content-Type': 'application/json',
                    Authorization: `Bearer ${process.env.EXPO_PUBLIC_REPAIRSHOPR_BEARER_TOKEN}`
                }
            })
            if (response.data) {
                console.log(response.data)
                // setTicketNumber(response.data?.ticket?.number)
                let ticketNumber = response?.data?.ticket?.number
                updateEntry({ ticketNumber });
                // createServiceOrder()
                Alert.alert("Ticket created", `Here is your ticket: ${response.data?.ticket?.number}`)

            }
            navigation.navigate("Home")
        } catch (error) {
            console.log("create ticket error", error)
        }
    }

    const openTermsAndConditions = async () => {
        await WebBrowser.openBrowserAsync(`${process.env.EXPO_PUBLIC_TERMS_LINK}`);
    }
    const openBackupTermsAndConditions = async () => {
        await WebBrowser.openBrowserAsync(`${process.env.EXPO_PUBLIC_BACKUP_TERMS_LINK}`);
    }
    const toggleBackupNeededCheckbox = () => {
        setIsBackUpNeedCheckboxEnabled(prev => !prev);
        openBackupTermsAndConditions()
    }


    return (
        <>
            <StatusBar />
            <Container>
                <SectionHeaderTitle title='Device Inspection' />
                <ScrollView>
                    <View>
                        <View
                            style={styles.textInputParent}
                        >
                            <TextInput
                                placeholder='Fault description'
                                placeholderTextColor={`${Colors.grey}`}
                                style={styles.textInput}
                                editable={true}
                                value={fault}
                                onChangeText={e => setFault(e)}
                            />
                        </View>
                        <View
                            style={styles.textInputParent}
                        >
                            {/* Dropdown menu */}
                            <Dropdown
                                style={[
                                    styles.dropdownInput,
                                    faultOccurenceFocus && { borderColor: `${Colors.blue}` },
                                ]}

                                // iconStyle={mainStyles.iconStyle}
                                fontFamily='Inter_400Regular'
                                data={faultOccurences}
                                maxHeight={300}
                                labelField="label"
                                valueField="value"
                                placeholder={!faultOccurenceFocus ? "How/When does the fault occur?" : "..."}
                                searchPlaceholder="Search..."
                                value={faultOccurence}
                                onFocus={() => setFaultOccurenceFocus(true)}
                                onBlur={() => setFaultOccurenceFocus(false)}
                                onChange={(item: any) => {
                                    setFaultOccurence(item.value);
                                    setFaultOccurenceFocus(false);
                                }}
                                itemTextStyle={styles.dropdownInputText}
                                placeholderStyle={styles.dropdownInputPlaceholder}
                            />
                        </View>
                        <View
                            style={styles.textInputParent}
                        >
                            {/* Dropdown menu */}
                            <Dropdown
                                style={[
                                    styles.dropdownInput,
                                    isAssetDropdownFocus && { borderColor: `${Colors.blue}` },
                                ]}

                                // iconStyle={mainStyles.iconStyle}
                                fontFamily='Inter_400Regular'
                                data={assetTypes}
                                // search
                                maxHeight={300}
                                labelField="label"
                                valueField="value"
                                placeholder={!isAssetDropdownFocus ? "What are you booking?" : "..."}
                                searchPlaceholder="Search..."
                                value={assetType}
                                onFocus={() => setIsAssetDropdownFocus(true)}
                                onBlur={() => setIsAssetDropdownFocus(false)}
                                onChange={(item: any) => {
                                    setAssetType(item.value);
                                    setIsAssetDropdownFocus(false);
                                }}
                                itemTextStyle={styles.dropdownInputText}
                                placeholderStyle={styles.dropdownInputPlaceholder}
                            />
                        </View>

                        <Text>Please let the booking agent fill in this section</Text>

                        <View
                            style={styles.textInputParent}
                        >
                            <TextInput
                                placeholder='Please fill in IMEI'
                                placeholderTextColor={`${Colors.grey}`}
                                style={styles.textInput}
                                editable={true}
                                value={IMEI}
                                onChangeText={e => setIMEI(e)}
                            />
                        </View>



                        {/* Symptom 1 */}
                        <View
                            style={styles.textInputParent}
                        >
                            {/* Dropdown menu */}
                            <Dropdown
                                style={[
                                    styles.dropdownInput,
                                    symptoms1Clicked && { borderColor: `${Colors.blue}` },
                                ]}

                                // iconStyle={mainStyles.iconStyle}
                                fontFamily='Inter_400Regular'
                                data={HHPSymptom1}
                                maxHeight={300}
                                labelField="_name"
                                valueField="value"
                                placeholder={!symptoms1Clicked ? "Customer symptom code 1" : `${symptom1}`}
                                searchPlaceholder="Search..."
                                value={symptom1}
                                onFocus={() => setSymptom1Clicked(true)}
                                onBlur={() => setSymptom1Clicked(false)}
                                onChange={(item: any) => {
                                    setSymptom1(item.value);
                                    setSymptom1ClickedLabel(item._name);
                                    setSymptom1Clicked(false);
                                }}
                                itemTextStyle={styles.dropdownInputText}
                                placeholderStyle={styles.dropdownInputPlaceholder}
                            />
                        </View>
                        {/* Symptom 2 */}
                        <View
                            style={styles.textInputParent}
                        >
                            {/* Dropdown menu */}
                            {
                                symptoms1ClickedLabel === "02 - [Installation]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2Q}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms1ClickedLabel === "05 - [FMM Service]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2A}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms1ClickedLabel === "06 - [Samsung Apps]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2B}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms1ClickedLabel === "AS - [Apps & Services]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2C}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms1ClickedLabel === "L1 - [Software Update]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2D}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms1ClickedLabel === "L2 - [Power]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2E}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms1ClickedLabel === "L3 - [Lock]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2F}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms1ClickedLabel === "L4 - [IMAGE / TOUCH SCREEN QUALITY]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2G}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms1ClickedLabel === "L5 - [Call Quality / Sound]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2H}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms1ClickedLabel === "L6 - [Connections]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2I}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms1ClickedLabel === "L7 - [Physical Damage]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2J}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms1ClickedLabel === "L8 - [SPECIFICATIONS]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2K}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms1ClickedLabel === "L9 - [Accessories]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2L}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms1ClickedLabel === "LA - [Internet / OS]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2M}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms1ClickedLabel === "LB - [Menu / Apps]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2N}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms1ClickedLabel === "LC - [Hubs]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2O}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms1ClickedLabel === "Z1 - [Galaxy Diagnostic]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms2Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom2P}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms2Clicked ? "Customer symptom code 2" : `${symptom2}`}
                                        searchPlaceholder="Search..."
                                        value={symptom2}
                                        onFocus={() => setSymptom2Clicked(true)}
                                        onBlur={() => setSymptom2Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom2(item.value);
                                            setSymptom2ClickedLabel(item._name);
                                            setSymptom2Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText} fSoft
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                        </View>

                        {/* Symptom 3 */}
                        <View
                            style={styles.textInputParent}
                        >
                            {
                                symptoms2ClickedLabel === "01 - [Interface software]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3A}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "02 - [Wireless Modem / Dial up networking]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3B}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "03 - [Operating system / software]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3C}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "04 - [Network]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3D}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "05 - [Software upgrade]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3E}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "01 - [Usage (How to Start)]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3F}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "02 - [Usage (function)]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3G}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "03 - [Usage (How to Stop)]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3H}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "04 - [Quality/Trouble (Website)]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3I}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "05 - [Quality/Trouble (Function)]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3J}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "01 - [Usage]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3K}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "02 - [Installation]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3L}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "04 - [Quality/Trouble)]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3M}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "31 - [AMX SmartHome]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3N}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "32 - [Bixby 1.0]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3O}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "33 - [Bixby Home]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3P}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "34 - [Bixby Vision]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3Q}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "35 - [Chef Collection [US only]]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3R}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "36 - [CMC]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3S}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "37 - [Enhanced Features]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3T}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "38 - [Find My Mobile]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3U}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "39 - [Galaxy Store]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3V}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "40 - [Galaxy Themes]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3W}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "41 - [Galaxy Wearable]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3X}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "42 - [Game Booster]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3Y}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "43 - [Game Launcher]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3Z}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "44 - [GDPR BixbyPP]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AA}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "45 - [GDPR MUSE]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AB}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "46 - [GDPR Runestone]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AC}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "47 - [GDPR Samsung Gear 360]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AC}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "48 - [HomeloT]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AD}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "49 - [Kids Mode]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AE}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "50 - [MILK]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AF}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "51 - [Milk Video]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AG}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "52 - [Milk VR]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AH}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "53 - [PENUP]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AI}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "54 - [Peppermint [KR only]]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AJ}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "55 - [Pictionary [US only]]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AK}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "56 - [S Assistant [CN only]]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AL}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "57 - [S Educate [US only]]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AM}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "58 - [S Note]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AN}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "59 - [Samsung Account]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AO}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "60 - [Samsung Blockchain Keystore]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AP}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "61 - [Samsung Blockchain Wallet]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AQ}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "62 - [Samsung Cloud]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AR}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "63 - [Samsung Daily]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AS}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "64 - [Samsung DeX]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AT}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "65 - [Samsung Flow]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AU}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "66 - [Samsung Free]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AV}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "67 - [Samsung Health]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AW}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "68 - [Samsung Health Monitor]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AX}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "69 - [Samsung Internet]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AY}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "70 - [Samsung Kids Home]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AE}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "71 - [Samsung Marshmallow]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3AZ}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "72 - [Samsung Music]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3Z_}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "73 - [Samsung Pass]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3BA}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "74 - [Samsung Rewards]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3BB}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "75 - [Samsung Smart Switch Mobile]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3BC}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "76 - [Samsung Smart Switch [US only]]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3BD}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "77 - [Samsung Social]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3S}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "78 - [Samsung TV Plus]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3BF}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "79 - [Samsung VR]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3BG}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "80 - [Samsung+ [US only]]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3BH}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "81 - [Samsung Wi-Fi]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3BI}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "82 - [SmartThings]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3BJ}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "83 - [The New Bixby]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3P}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "84 - [Tizen Store [en ONLY]]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3BK}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "85 - [Vodafone Smart Home]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3BL}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "86 - [Samsung Pay]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3BM}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "87 - [Samsung Pay Gear]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3BN}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "88 - [Galaxy Store Event]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3BO}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "89 - [Samsung Health Cycle tracking]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3BP}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "99 - [Others]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3BQ}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "01 - [Information about Software Update]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CA}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "02 - [Problems after downloading update]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CB}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "01 - [Turn on/off]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CC}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "02 - [No charge]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CD}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "03 - [Intermittent Power]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CE}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "04 - [Quick discharge]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CF}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "01 - [Carrier Lock]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CG}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "02 - [SIM Card Lock]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CH}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "03 - [Device Lock]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CI}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "04 - [Non technical]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CJ}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "01 - [Touch screen]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CK}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "02 - [Defective color]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CL}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "03 - [Display color tone]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CM}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "01 - [Coverage problems]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CN}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "02 - [Sound problems]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CO}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "03 - [Non technical]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CP}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "01 - [Bluetooth]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CQ}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "02 - [Mobile data]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CR}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "03 - [PC= KIES / Kiers Air / New PC Studio / PC Studio]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CS}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "04 - [PC = Massive storage]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CT}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "05 - [TV connection]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CU}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "06 - [Wireless connection]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CV}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "07 - [NFC]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CW}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "08 - [WiFi direct]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CX}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "09 - [Non technical]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3CY}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "01 - [Antenna]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DA}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "02 - [Head devices / accessories]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DB}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "03 - [In battery]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DC}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "04 - [In camera]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DD}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "05 - [In cover]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DE}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "06 - [In keyboard]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DF}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "07 - [Overheating]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DH}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "08 - [SD card, SIM card]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DI}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "09 - [Vibration]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DJ}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "10 - [Broken screen]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DK}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "11 - [Defective color]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DL}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "12 - [Liquid trace]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DM}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "13 - [Stains]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DN}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "14 - [Non technical]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DO}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "15 - [Hinge]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DP}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "01 - [Hardware]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DQ}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "02 - [Software]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DR}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "03 - [Product feature]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DS}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "04 - [User manual]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DT}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "05 - [Non technical]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DU}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "01 - [Adaptors]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DV}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "02 - [Headphones]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DW}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "03 - [Case / cover]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DX}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "04 - [Battery]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DY}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "05 - [Charger]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3DZ}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "06 - [S pen]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EA}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "07 - [DOA Battery cover]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EB}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "08 - [Hands free accessories]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EC}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "09 - [Bluetooth]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3ED}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "10 - [Memory card]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EE}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "11 - [Dock]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EF}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "12 - [Data cable]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EG}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "13 - [Cast dongle]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EH}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "14 - [Others]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EI}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "01 - [Email / accounts]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EJ}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "02 - [Google play]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EK}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "03 - [Webpages]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EL}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "04 - [Sync]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EM}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "05 - [Operating system]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EN}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "06 - [MAC OS]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EO}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "07 - [Zune]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EP}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "08 - [Non technical]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EQ}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "01 - [Agenda]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3ER}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "02 - [Apps]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3ES}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "03 - [Samsung Apps]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3ET}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "04 - [Calendar]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EU}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "05 - [Language]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EV}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "06 - [GPS]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EW}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "07 - [Features]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EX}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "08 - [Calls]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EY}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "09 - [Camera]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3EZ}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "10 - [Modem / router]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FA}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "11 - [Driving mode]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FB}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "12 - [Others]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FC}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "13 - [All share]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FD}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "14 - [Screen]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FE}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "15 - [Find my mobile]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FF}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "16 - [SMS / MMS]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FG}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "17 - [Videos]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FH}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "18 - [Widgets]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FI}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "19 - [Non technical]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FJ}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "20 - [Compass]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FK}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "01 - [Game hub]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FL}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "02 - [Media hub]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FM}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "03 - [Music hub]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FN}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "04 - [Social hub]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FO}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "05 - [Samsung hub]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FP}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "06 - [Hubs (others)]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FR}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "01 - [Power]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FS}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "02 - [Battery]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FT}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "03 - [Charging]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FU}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "04 - [Sound]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FV}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "05 - [Display]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FW}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "06 - [Touch]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FX}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "07 - [Button]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FY}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "08 - [Camera]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3FZ}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "09 - [Call]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3GA}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "10 - [Operation / performace]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3GB}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "11 - [FW / SW]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3GC}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "12 - [Connection, WiFi, BT IR]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3GD}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "13 - [Sensors]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3GE}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "14 - [SMS]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3GF}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "15 - [Vibrations]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3GG}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                            {
                                symptoms2ClickedLabel === "16 - [Others]" ? (
                                    <Dropdown
                                        style={[
                                            styles.dropdownInput,
                                            symptoms3Clicked && { borderColor: `${Colors.blue}` },
                                        ]}

                                        // iconStyle={mainStyles.iconStyle}
                                        fontFamily='Inter_400Regular'
                                        data={HHPSymptom3GH}
                                        maxHeight={300}
                                        labelField="_name"
                                        valueField="value"
                                        placeholder={!symptoms3Clicked ? "Customer symptom code 3" : `${symptom3}`}
                                        searchPlaceholder="Search..."
                                        value={symptom3}
                                        onFocus={() => setSymptom3Clicked(true)}
                                        onBlur={() => setSymptom3Clicked(false)}
                                        onChange={(item: any) => {
                                            setSymptom3(item.value);

                                            setSymptom3Clicked(false);
                                        }}
                                        itemTextStyle={styles.dropdownInputText}
                                        placeholderStyle={styles.dropdownInputPlaceholder}
                                    />
                                ) : null
                            }
                        </View>

                        <View style={{
                            gap: 10,
                            marginVertical: 8
                        }}>
                            <CustomButton text="Read our terms"
                                fontSize={14}
                                buttonBgColor={`${Colors.grey}`}
                                pressedButtonBgColor={`${Colors.black}`} onPress={openTermsAndConditions} />

                        </View>
                        <View style={styles.checkboxWrapper}>
                            <Text style={styles.checkboxLabel}>I agree with the terms and conditions</Text>
                            <Checkbox value={readTerms} onValueChange={toggleTermsAndModal} />
                        </View>
                        {
                            readTerms === true ? (<View style={styles.modalOpenStyles}>
                                <Modal
                                    animationType="slide"
                                    transparent={true}
                                    visible={modalVisible}
                                    onRequestClose={() => {
                                        Alert.alert('Modal has been closed.');
                                        setModalVisible(!modalVisible);
                                    }}>
                                    <View style={styles.modalContent}>
                                        <View style={[styles.modalSignaturePadWrapper, {
                                            width: width, shadowOffset: {
                                                width: 0,
                                                height: 2,
                                            },
                                        }]}>
                                            <SignatureScreen
                                                ref={termsRef}
                                                onEnd={handleTermsSignatureEnd}
                                                onOK={handleTermsSignatureOK}
                                                onEmpty={handleTermsSignatureEmpty}
                                                onClear={handleTermsSignatureClear}
                                                onGetData={handleData}
                                                autoClear={true}
                                                descriptionText={"Signature pad"}
                                            />

                                            <CustomButton text="Done signing"
                                                fontSize={14}
                                                buttonBgColor={`${Colors.lightBlue}`}
                                                pressedButtonBgColor={`${Colors.blue}`} onPress={() => setModalVisible(!modalVisible)} />

                                        </View>
                                    </View>
                                </Modal>
                            </View>) : ""
                        }

                        <View>
                            {signatureTermsExists === true ? (
                                <Image
                                    resizeMode={"contain"}
                                    style={{ borderWidth: 1, height: 200 }}
                                    source={{ uri: userTermsSignature }}
                                />
                            ) : null}
                        </View>

                        {assetType === "HHP(Mobile Phone/Tablets)" ?
                            <View style={{ flexDirection: "row", justifyContent: "space-between", alignItems: "center", marginVertical: 8 }}>
                                <Text style={{
                                    paddingVertical: 10,
                                    fontFamily: "Inter_400Regular",
                                    color: `${Colors.black}`
                                }}>Does your phone require backup?(If no, leave unchecked)</Text>
                                <Checkbox value={isBackUpNeedCheckboxEnabled} onValueChange={toggleBackupNeededCheckbox} />
                            </View> : ""
                        }


                        <CustomButton text="Create ticket"
                            fontSize={14}
                            buttonBgColor={`${Colors.lightBlue}`}
                            pressedButtonBgColor={`${Colors.blue}`} onPress={createTicket} />

                    </View>
                </ScrollView>
            </Container>

        </>
    )
}